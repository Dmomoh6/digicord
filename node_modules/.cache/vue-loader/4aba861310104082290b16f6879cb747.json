{"remainingRequest":"/Users/dmomoh/Desktop/digicord/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dmomoh/Desktop/digicord/src/components/BoardColumn.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dmomoh/Desktop/digicord/src/components/BoardColumn.vue","mtime":1641744142662},{"path":"/Users/dmomoh/Desktop/digicord/node_modules/cache-loader/dist/cjs.js","mtime":1641060581900},{"path":"/Users/dmomoh/Desktop/digicord/node_modules/babel-loader/lib/index.js","mtime":1641060592557},{"path":"/Users/dmomoh/Desktop/digicord/node_modules/cache-loader/dist/cjs.js","mtime":1641060581900},{"path":"/Users/dmomoh/Desktop/digicord/node_modules/vue-loader/lib/index.js","mtime":1641060586070}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ColumnTask from './ColumnTask'\nimport AppDrag from './AppDrag'\nimport AppDrop from './AppDrop'\nimport movingTasksAndColumnsMixin from '@/mixins/movingTasksAndColumnsMixin'\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  components: {\n    ColumnTask,\n    AppDrag,\n    AppDrop\n  },\n  mixins: [movingTasksAndColumnsMixin],\n  methods: {\n    pickupColumn (e, fromColumnIndex) {\n      e.dataTransfer.effectAllowed = 'move'\n      e.dataTransfer.dropEffect = 'move'\n\n      e.dataTransfer.setData('from-column-index', fromColumnIndex)\n      e.dataTransfer.setData('type', 'column')\n    },\n    createTask (e, tasks) {\n      this.$store.commit('CREATE_TASK', {\n        tasks,\n        name: e.target.value\n      })\n      e.target.value = ''\n    },\n    editColumn () {\n      this.goToColumn(this.column.id)\n    },\n    goToColumn (columnid) {\n      this.$router.push({ name: 'column', params: { id: columnid } })\n    },\n    deleteColumn (fromColumnIndex) {\n      this.$store.commit('DELETE_COLUMN', { fromColumnIndex })\n    }\n  }\n}\n",{"version":3,"sources":["BoardColumn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BoardColumn.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <AppDrop\n    @drop=\"moveTaskOrColumn\"\n  >\n    <AppDrag\n      class=\"column\"\n      :transferData=\"{\n        type: 'column',\n        fromColumnIndex: columnIndex\n      }\"\n    >\n      <div class=\"flex font-semibold text-white ml-1 mt-2 mb-2\">\n        <div class=\"col-name\">\n        {{ column.name }}\n        </div>\n        <div @click=\"editColumn()\" class=\"edit\"><fa class=\"-ml-10\" icon=\"pencil-alt\"/>\n          </div>\n\n<div @click=\"deleteColumn(columnIndex)\" class=\"edit\"><fa class=\"-ml-4\" icon=\"trash-alt\"/></div>\n      </div>\n      <div class=\"list-reset -mt-2 ml-1 mr-1\">\n        <ColumnTask\n          v-for=\"(task, $taskIndex) of column.tasks\"\n          :key=\"$taskIndex\"\n          :task=\"task\"\n          :taskIndex=\"$taskIndex\"\n          :column=\"column\"\n          :columnIndex=\"columnIndex\"\n          :board=\"board\"\n        />\n\n        <input\n          type=\"text\"\n          class=\"block p-2 mb-1 w-full mt-4 rounded-custom text-white font-medium bg-transparent border \"\n          placeholder=\"+ Enter new task\"\n          @keyup.enter=\"createTask($event, column.tasks)\"\n        />\n      </div>\n    </AppDrag>\n  </AppDrop>\n</template>\n\n<script>\nimport ColumnTask from './ColumnTask'\nimport AppDrag from './AppDrag'\nimport AppDrop from './AppDrop'\nimport movingTasksAndColumnsMixin from '@/mixins/movingTasksAndColumnsMixin'\n\nexport default {\n  data () {\n    return {\n    }\n  },\n  components: {\n    ColumnTask,\n    AppDrag,\n    AppDrop\n  },\n  mixins: [movingTasksAndColumnsMixin],\n  methods: {\n    pickupColumn (e, fromColumnIndex) {\n      e.dataTransfer.effectAllowed = 'move'\n      e.dataTransfer.dropEffect = 'move'\n\n      e.dataTransfer.setData('from-column-index', fromColumnIndex)\n      e.dataTransfer.setData('type', 'column')\n    },\n    createTask (e, tasks) {\n      this.$store.commit('CREATE_TASK', {\n        tasks,\n        name: e.target.value\n      })\n      e.target.value = ''\n    },\n    editColumn () {\n      this.goToColumn(this.column.id)\n    },\n    goToColumn (columnid) {\n      this.$router.push({ name: 'column', params: { id: columnid } })\n    },\n    deleteColumn (fromColumnIndex) {\n      this.$store.commit('DELETE_COLUMN', { fromColumnIndex })\n    }\n  }\n}\n</script>\n\n<style lang=\"css\">\n.column {\n  @apply bg-custom rounded-custom p-2 mr-4 text-left mt-3;\n  width: 320px;\n  word-wrap: break-word;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n}\n</style>\n\n<style scoped>\n\n.edit{\n  font-size: 12px;\n}\n\n.col-name\n{\n  width: 100%;\n}\n</style>\n"]}]}